server {
    listen 80;
    server_name localhost;

    location / {
        proxy_pass http://frontend:80; # 'frontend' is the service name in docker-compose.yml
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_read_timeout 300s;
        proxy_connect_timeout 75s;
    }

    location /api/v1/ {
        proxy_pass http://backend:8000/api/v1/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_read_timeout 300s;
        proxy_connect_timeout 75s;
    }

    # For Vite HMR during development (if frontend service was Vite dev server)
    # For a production build served by Nginx within the frontend container, 
    # specific websocket proxying to it might not be needed unless the app uses websockets.
    # If the frontend app itself uses websockets, they should be proxied to the frontend service.
    # location /ws {
    #     proxy_pass http://frontend:80; # Assuming frontend Nginx handles its own WS or it_s for dev
    #     proxy_http_version 1.1;
    #     proxy_set_header Upgrade $http_upgrade;
    #     proxy_set_header Connection "Upgrade";
    # }
}
